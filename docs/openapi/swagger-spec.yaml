openapi: 3.0.0
paths:
  /portfolio/{id}/header:
    get:
      operationId: PortfolioController_getHeader
      summary: Returns the header of a user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeaderDto'
      tags:
        - portfolio
      security:
        - bearer: []
  /portfolio/{id}/about:
    get:
      operationId: PortfolioController_getAbout
      summary: Returns the about of a user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutDto'
      tags:
        - portfolio
      security:
        - bearer: []
  /portfolio/{id}/education:
    get:
      operationId: PortfolioController_getEducation
      summary: Returns the education of a user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationPortfolioDto'
      tags:
        - portfolio
      security:
        - bearer: []
  /portfolio/{id}/work-experience:
    get:
      operationId: PortfolioController_getWorkExperience
      summary: Returns the work experience of a user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkExperiencePortfolioDto'
      tags:
        - portfolio
      security:
        - bearer: []
  /portfolio/{id}/skills:
    get:
      operationId: PortfolioController_getSkills
      summary: Returns the skills of a user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkillPortfolioDto'
      tags:
        - portfolio
      security:
        - bearer: []
  /portfolio/{id}/projects:
    get:
      operationId: PortfolioController_getProjects
      summary: Returns the projects of a user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectPortfolioDto'
      tags:
        - portfolio
      security:
        - bearer: []
  /portfolio/{id}/footer:
    get:
      operationId: PortfolioController_getFooter
      summary: Returns the footer of a user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FooterPortfolioDto'
      tags:
        - portfolio
      security:
        - bearer: []
  /auth/signup:
    post:
      operationId: AuthController_signUp
      summary: Sign up a new user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthSignUpDto'
      responses:
        '201':
          description: ''
      tags:
        - auth
  /auth/login:
    post:
      operationId: AuthController_logIn
      summary: Log in a user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLogInDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponseDto'
      tags:
        - auth
  /admin/{id}/user:
    get:
      operationId: AdminController_getUser
      summary: Get a user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
      tags:
        - admin
    patch:
      operationId: AdminController_updateUser
      summary: Update a user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
      tags:
        - admin
  /admin/{id}/education:
    get:
      operationId: AdminController_getEducations
      summary: Get educations
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationDto'
      tags:
        - admin
    post:
      operationId: AdminController_createEducation
      summary: Creates a new education
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEducationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationDto'
      tags:
        - admin
  /admin/{id}/education/{idEducation}:
    put:
      operationId: AdminController_updateEducation
      summary: Updates an education
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idEducation
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEducationDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationDto'
      tags:
        - admin
    delete:
      operationId: AdminController_deleteEducation
      summary: Deletes an education
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idEducation
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin
  /admin/{id}/work-experience:
    get:
      operationId: AdminController_getWorkExperiences
      summary: Get work experiences
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkExperienceDto'
      tags:
        - admin
    post:
      operationId: AdminController_createWorkExperience
      summary: Creates a work experience
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkExperienceDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkExperienceDto'
      tags:
        - admin
  /admin/{id}/work-experience/{idWorkExperience}:
    put:
      operationId: AdminController_updateWorkExperience
      summary: Updates a work experience
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idWorkExperience
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkExperienceDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkExperienceDto'
      tags:
        - admin
    delete:
      operationId: AdminController_deleteWorkExperience
      summary: Deletes a work experience
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idWorkExperience
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin
  /admin/{id}/skill:
    get:
      operationId: AdminController_getSkills
      summary: Get skills
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkillDto'
      tags:
        - admin
    post:
      operationId: AdminController_createSkill
      summary: Creates a skill
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSkillDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
      tags:
        - admin
  /admin/{id}/skill/{idSkill}:
    put:
      operationId: AdminController_updateSkill
      summary: Updates a skill
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idSkill
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSkillDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
      tags:
        - admin
    delete:
      operationId: AdminController_deleteSkill
      summary: Deletes a skill
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idSkill
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin
  /admin/{id}/contact:
    get:
      operationId: AdminController_getContact
      summary: Get contacts
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDto'
      tags:
        - admin
    post:
      operationId: AdminController_createContact
      summary: Creates a contact
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDto'
      tags:
        - admin
  /admin/{id}/contact/{idContact}:
    put:
      operationId: AdminController_updateContact
      summary: Updates a contact
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idContact
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDto'
      tags:
        - admin
    delete:
      operationId: AdminController_deleteContact
      summary: Deletes a contact
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idContact
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin
  /admin/{id}/bullet-point:
    get:
      operationId: AdminController_getBulletPoints
      summary: Get bullet points
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulletPointDto'
      tags:
        - admin
    post:
      operationId: AdminController_createBulletPoint
      summary: Creates a bullet point
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBulletPointDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulletPointDto'
      tags:
        - admin
  /admin/{id}/bullet-point/{idBulletPoint}:
    put:
      operationId: AdminController_updateBulletPoint
      summary: Updates a bullet point
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idBulletPoint
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBulletPointDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationDto'
      tags:
        - admin
    delete:
      operationId: AdminController_deleteBulletPoint
      summary: Deletes a bullet point
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idBulletPoint
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin
  /admin/{id}/tag:
    get:
      operationId: AdminController_getTags
      summary: Get tags
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagDto'
      tags:
        - admin
    post:
      operationId: AdminController_createTag
      summary: Creates a tag
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDto'
      tags:
        - admin
  /admin/{id}/tag/{idTag}:
    put:
      operationId: AdminController_updateTag
      summary: Updates a tag
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idTag
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDto'
      tags:
        - admin
    delete:
      operationId: AdminController_deleteTag
      summary: Deletes a tag
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idTag
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin
  /admin/{id}/link:
    get:
      operationId: AdminController_getLinks
      summary: Get links
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LinkDto'
      tags:
        - admin
    post:
      operationId: AdminController_createLink
      summary: Creates a link
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLinkDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDto'
      tags:
        - admin
  /admin/{id}/link/{idLink}:
    put:
      operationId: AdminController_updateLink
      summary: Updates a link
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idLink
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLinkDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDto'
      tags:
        - admin
    delete:
      operationId: AdminController_deleteLink
      summary: Deletes a link
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idLink
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin
  /admin/{id}/footer:
    get:
      operationId: AdminController_getFooters
      summary: Get footers
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FooterDto'
      tags:
        - admin
    post:
      operationId: AdminController_createFooter
      summary: Creates a footer
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFooterDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FooterDto'
      tags:
        - admin
  /admin/{id}/footer/{idFooter}:
    delete:
      operationId: AdminController_deleteFooter
      summary: Deletes a footer
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: idFooter
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin
info:
  title: Portfolio API
  description: The OpenAPI of the Portoflio API
  version: '1.0'
  contact: {}
tags:
  - name: portfolio
    description: ''
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    HeaderDto:
      type: object
      properties:
        name:
          type: string
        role:
          type: string
        description:
          type: string
        navBar:
          type: array
          items:
            type: string
        iconList:
          type: array
          items:
            type: string
      required:
        - name
        - role
        - description
        - navBar
        - iconList
    AboutDto:
      type: object
      properties:
        paragraphs:
          type: array
          items:
            type: string
      required:
        - paragraphs
    EducationPortfolioDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        university:
          type: string
        date:
          type: string
        universityLink:
          type: string
      required:
        - id
        - name
        - university
        - date
        - universityLink
    WorkExperiencePortfolioDto:
      type: object
      properties:
        id:
          type: string
        role:
          type: string
        company:
          type: string
        companyLink:
          type: string
        date:
          type: string
        description:
          type: array
          items:
            type: string
        links:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
      required:
        - id
        - role
        - company
        - companyLink
        - date
        - description
        - links
        - tags
    SkillPortfolioDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        progress:
          type: number
      required:
        - id
        - name
        - progress
    ProjectPortfolioDto:
      type: object
      properties:
        projectName:
          type: string
        technologies:
          type: array
          items:
            type: string
        bulletPoints:
          type: array
          items:
            type: string
      required:
        - projectName
        - technologies
        - bulletPoints
    FooterPortfolioDto:
      type: object
      properties:
        paragraphs:
          type: array
          items:
            type: string
      required:
        - paragraphs
    AuthSignUpDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          format: date-time
          type: string
      required:
        - username
        - password
        - firstName
        - lastName
        - dateOfBirth
    AuthLogInDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    AuthTokenResponseDto:
      type: object
      properties:
        idUser:
          type: string
        accessToken:
          type: string
      required:
        - idUser
        - accessToken
    UserDto:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          format: date-time
          type: string
        description:
          type: string
      required:
        - id
        - username
        - firstName
        - lastName
        - dateOfBirth
        - description
    UpdateUserDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          format: date-time
          type: string
        description:
          type: string
      required:
        - firstName
        - lastName
        - dateOfBirth
        - description
    EducationDto:
      type: object
      properties:
        id:
          type: string
        courseName:
          type: string
        institute:
          type: string
        instituteLink:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        grade:
          type: number
        user:
          type: string
      required:
        - id
        - courseName
        - institute
        - instituteLink
        - startDate
        - endDate
        - grade
        - user
    CreateEducationDto:
      type: object
      properties:
        courseName:
          type: string
        institute:
          type: string
        instituteLink:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        grade:
          type: number
      required:
        - courseName
        - institute
        - instituteLink
        - startDate
        - endDate
        - grade
    UpdateEducationDto:
      type: object
      properties:
        courseName:
          type: string
        institute:
          type: string
        instituteLink:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        grade:
          type: number
      required:
        - courseName
        - institute
        - instituteLink
        - startDate
        - endDate
        - grade
    WorkExperienceDto:
      type: object
      properties:
        id:
          type: string
        role:
          type: string
        company:
          type: string
        companyLink:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        bulletPoints:
          type: array
          items:
            type: string
        links:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        user:
          type: string
      required:
        - id
        - role
        - company
        - companyLink
        - startDate
        - endDate
        - bulletPoints
        - links
        - tags
        - user
    CreateWorkExperienceDto:
      type: object
      properties:
        role:
          type: string
        company:
          type: string
        companyLink:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      required:
        - role
        - company
        - companyLink
        - startDate
        - endDate
    UpdateWorkExperienceDto:
      type: object
      properties:
        role:
          type: string
        company:
          type: string
        companyLink:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      required:
        - role
        - company
        - companyLink
        - startDate
        - endDate
    SkillDto:
      type: object
      properties:
        id:
          type: string
        skillName:
          type: string
        rating:
          type: number
        user:
          type: string
      required:
        - id
        - skillName
        - rating
        - user
    CreateSkillDto:
      type: object
      properties:
        skillName:
          type: string
        rating:
          type: number
      required:
        - skillName
        - rating
    UpdateSkillDto:
      type: object
      properties:
        skillName:
          type: string
        rating:
          type: number
      required:
        - skillName
        - rating
    ContactDto:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        user:
          type: string
      required:
        - id
        - email
        - user
    CreateContactDto:
      type: object
      properties:
        email:
          type: string
      required:
        - email
    UpdateContactDto:
      type: object
      properties:
        email:
          type: string
      required:
        - email
    BulletPointDto:
      type: object
      properties:
        id:
          type: string
        bulletPoint:
          type: string
        workExperience:
          type: string
        project:
          type: string
      required:
        - id
        - bulletPoint
        - workExperience
        - project
    CreateBulletPointDto:
      type: object
      properties:
        bulletPoint:
          type: string
        workExperience:
          type: string
        project:
          type: string
      required:
        - bulletPoint
        - workExperience
        - project
    UpdateBulletPointDto:
      type: object
      properties:
        bulletPoint:
          type: string
      required:
        - bulletPoint
    TagDto:
      type: object
      properties:
        id:
          type: string
        tag:
          type: string
        workExperience:
          type: string
      required:
        - id
        - tag
        - workExperience
    CreateTagDto:
      type: object
      properties:
        tag:
          type: string
        workExperience:
          type: string
      required:
        - tag
        - workExperience
    UpdateTagDto:
      type: object
      properties:
        tag:
          type: string
      required:
        - tag
    LinkDto:
      type: object
      properties:
        id:
          type: string
        tag:
          type: string
        name:
          type: string
        link:
          type: string
        target:
          type: string
        workExperience:
          type: string
        paragraph:
          type: string
        contact:
          type: string
      required:
        - id
        - tag
        - name
        - link
        - target
        - workExperience
        - paragraph
        - contact
    CreateLinkDto:
      type: object
      properties:
        tag:
          type: string
        name:
          type: string
        link:
          type: string
        target:
          type: string
        workExperience:
          type: string
        paragraph:
          type: string
        contact:
          type: string
      required:
        - tag
        - name
        - link
        - target
        - workExperience
        - paragraph
        - contact
    UpdateLinkDto:
      type: object
      properties:
        tag:
          type: string
        name:
          type: string
        link:
          type: string
        target:
          type: string
      required:
        - tag
        - name
        - link
        - target
    FooterDto:
      type: object
      properties:
        id:
          type: string
        user:
          type: string
      required:
        - id
        - user
    CreateFooterDto:
      type: object
      properties:
        user:
          type: string
      required:
        - user
